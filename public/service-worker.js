// public/service-worker.js
/* eslint-disable no-restricted-globals */
import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { CacheFirst, StaleWhileRevalidate, NetworkFirst} from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';

// Precache all the assets generated by next-pwa
precacheAndRoute(self.__WB_MANIFEST);

// Example: Cache Google Fonts
registerRoute(
  ({ url }) => url.origin === 'https://fonts.googleapis.com' || url.origin === 'https://fonts.gstatic.com',
  new StaleWhileRevalidate({
    cacheName: 'google-fonts',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 20,
        maxAgeSeconds: 60 * 60 * 24 * 365, // 1 Year
      }),
    ],
  })
);

// Add more custom routes as needed
self.addEventListener('install', (event) => {
  event.waitUntil(
    caches.open('netz-v1').then((cache) => {
      return cache.addAll([
        '/',
        '/home.svg',
        '/tune.svg',
        '/notes.svg',
        '/bisection-method',
  
        '/iteration-method',
  
        '/false-position-method',
  
        '/newton-raphson-method',
  
        '/Gauss-seidal'
        // Add any other static assets here
      ]);
    })
  );
});
self.addEventListener('install', (event) => {
  console.log('Service Worker installing.');
});

self.addEventListener('activate', (event) => {
  console.log('Service Worker activated.');
});

self.addEventListener('fetch', (event) => {
  event.respondWith(
    caches.match(event.request).then((response) => {
      return response || fetch(event.request);
    })
  );
});